#pragma once
#include "bignum.h"

enum ModulusType {
    ACCUMULATOR_MODULUS,
    COIN_COMMITMENT_MODULUS,
    SERIAL_NUMBER_SOK_COMMITMENT_MODULUS,
    SERIAL_NUMBER_SOK_COMMITMENT_GROUP,
    ACCUMULATOR_POK_COMMITMENT_MODULUS,
    ACCUMULATOR_POK_COMMITMENT_GROUP
};

/// This is how to access the Modulus/Group values for each defined enum
/// If the below template class is not specialized for a value that is being used, you should get a compile error
template <ModulusType T> class IntegerModModulus {
public:
    static CBigNum getModulus() {
        static_assert(true, " undefined Modulus type, please use one of ModulusType enum");
        throw std::runtime_error("Undefined default type");
    }
};

template <> inline CBigNum IntegerModModulus<ACCUMULATOR_MODULUS>::getModulus() {
    return CBigNum("25195908475657893494027183240048398571429282126204032027777137836043662020707595556264018525880784406918290641249515082189298559149176184502808489120072844992687392807287776735971418347270261896375014971824691165077613379859095700097330459748808428401797429100642458691817195118746121515172654632282216869987549182422433637259085141865462043576798423387184774447920739934236584823824281198163815010674810451660377306056201619676256133844143603833904414952634432190114657544454178424020924616515723350778707749817125772467962926386356373289912154831438167899885040445364023527381951378636564391212010397122822120720357");
};
template <> inline CBigNum IntegerModModulus<COIN_COMMITMENT_MODULUS>::getModulus() {
    return CBigNum("d0b90a77b56cb5bb1db81b6793327156238085b2bd4b1a3fbcdbde1e415164ee9d7838fde4d97cd50319db52147b15c499f4ed06a2bab661de3476c0440f4595f88078dd15cc5700a250fa1cf0bd9b0e8068653f8b867d056ffb2e79ae1e13b968d727bf49038bf3d2620dbf63efe66245219ea5531b63ed46772c0b0713fe9f");
};

template <> inline CBigNum IntegerModModulus<SERIAL_NUMBER_SOK_COMMITMENT_MODULUS>::getModulus() {
    return CBigNum("5cf266a94eca68ed533bfc341f8c76785bcf3b89984b71b06219e8e979163ef2421f89610fe8d996db6183aa8d1ecfb18c8f118cf477253794f35ce19e4eccfcc8a935d273b4febe48480f60e3346f0c752e7d164c21e3ac6bdddab22f8964c890afcfb32e83945293afaa1f3a80d497c2c8f8a59f02327fa961119ce926e762cf");
};

template <> inline CBigNum IntegerModModulus<SERIAL_NUMBER_SOK_COMMITMENT_GROUP>::getModulus() {
    return CBigNum("d0b90a77b56cb5bb1db81b6793327156238085b2bd4b1a3fbcdbde1e415164ee9d7838fde4d97cd50319db52147b15c499f4ed06a2bab661de3476c0440f4595f88078dd15cc5700a250fa1cf0bd9b0e8068653f8b867d056ffb2e79ae1e13b968d727bf49038bf3d2620dbf63efe66245219ea5531b63ed46772c0b0713fe9f");
};

template <> inline CBigNum IntegerModModulus<ACCUMULATOR_POK_COMMITMENT_MODULUS>::getModulus() {
    return CBigNum("9196e927ad94639fcaa78f04bd3f1b3b61a10cb9278afd3910da1b8eab17ec75a83460ac30dc69c73a6bf24430d3bb45b15cba91b96f3f24556f3559fded278f6f91b3c0953");
};

template <> inline CBigNum IntegerModModulus<ACCUMULATOR_POK_COMMITMENT_GROUP>::getModulus() {
    return CBigNum("12a6508eaf31168e7399ae82878b07acf0068f87e211728193e9b2e3a6cb0ec31");
};
